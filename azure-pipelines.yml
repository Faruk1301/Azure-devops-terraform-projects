
trigger:
  branches:
    include:
      - main  # Ensure this matches your repo's branch name

pool:
  vmImage: 'ubuntu-latest'

steps:
  # Authenticate with Azure using the Azure Service Connection
  - task: AzureCLI@2
    displayName: 'Azure Login'
    inputs:
      azureSubscription: 'azure-sc'  # Replace with your Azure Service Connection name
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        # Confirm successful login and display subscription info
        az account show

  # Install Terraform
  - task: Bash@3
    displayName: 'Install Terraform'
    inputs:
      targetType: 'inline'
      script: |
        sudo apt-get update
        sudo apt-get install -y gnupg software-properties-common
        curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg
        echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
        sudo apt-get update && sudo apt-get install terraform -y
        terraform --version

  # Initialize Terraform
  - task: Bash@3
    displayName: 'Terraform Init'
    inputs:
      targetType: 'inline'
      script: |
        export ARM_CLIENT_ID=$(ARM_CLIENT_ID)
        export ARM_CLIENT_SECRET=$(ARM_CLIENT_SECRET)
        export ARM_SUBSCRIPTION_ID=$(ARM_SUBSCRIPTION_ID)
        export ARM_TENANT_ID=$(ARM_TENANT_ID)

        terraform init

  # Terraform Plan
  - task: Bash@3
    displayName: 'Terraform Plan'
    inputs:
      targetType: 'inline'
      script: |
        terraform plan -out=tfplan

  # Terraform Apply
  - task: Bash@3
    displayName: 'Terraform Apply'
    inputs:
      targetType: 'inline'
      script: |
        terraform apply -auto-approve tfplan
