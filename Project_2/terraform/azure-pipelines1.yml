trigger:
  branches:
    include:
      - main

variables:
  - group: azure_credential
  - name: TF_VERSION
    value: '1.6.6'
  - name: RESOURCE_GROUP_NAME
    value: 'my-vnet-rg'
  - name: VNET_NAME
    value: 'my-vnet'
  - name: LOCATION
    value: 'eastus'

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: Validate
    jobs:
      - job: TerraformValidation
        steps:
          - checkout: self

          - task: TerraformInstaller@1
            inputs:
              terraformVersion: '$(TF_VERSION)'

          - task: AzureCLI@2
            inputs:
              azureSubscription: 'azure-sc'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              workingDirectory: '$(Build.SourcesDirectory)/Project_2/terraform'
              inlineScript: |
                set -e
                export ARM_CLIENT_ID=$(ARM_CLIENT_ID)
                export ARM_CLIENT_SECRET=$(ARM_CLIENT_SECRET)
                export ARM_SUBSCRIPTION_ID=$(ARM_SUBSCRIPTION_ID)
                export ARM_TENANT_ID=$(ARM_TENANT_ID)

                terraform init -input=false
                terraform validate
                terraform plan -input=false \
                  -var="resource_group_name=$(RESOURCE_GROUP_NAME)" \
                  -var="vnet_name=$(VNET_NAME)" \
                  -var="location=$(LOCATION)"

  - stage: Deploy
    dependsOn: Validate
    condition: succeeded()
    jobs:
      - job: TerraformApply
        steps:
          - checkout: self

          - task: TerraformInstaller@1
            inputs:
              terraformVersion: '$(TF_VERSION)'

          - task: AzureCLI@2
            inputs:
              azureSubscription: 'azure-sc'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              workingDirectory: '$(Build.SourcesDirectory)/Project_2/terraform'
              inlineScript: |
                set -e
                export ARM_CLIENT_ID=$(ARM_CLIENT_ID)
                export ARM_CLIENT_SECRET=$(ARM_CLIENT_SECRET)
                export ARM_SUBSCRIPTION_ID=$(ARM_SUBSCRIPTION_ID)
                export ARM_TENANT_ID=$(ARM_TENANT_ID)

                terraform apply -auto-approve -input=false \
                  -var="resource_group_name=$(RESOURCE_GROUP_NAME)" \
                  -var="vnet_name=$(VNET_NAME)" \
                  -var="location=$(LOCATION)"



         
























