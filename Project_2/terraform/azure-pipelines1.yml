trigger:
  branches:
    include:
      - main  # Adjust as necessary

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: azure_credential  # Variable group containing sensitive data like CLIENT_ID, CLIENT_SECRET, etc.

stages:
  - stage: Terraform_Deploy
    displayName: 'Terraform Plan & Apply'
    jobs:
      - job: Terraform
        displayName: 'Run Terraform'
        timeoutInMinutes: 10
        steps:
          - checkout: self

          # Install Terraform using bash
          - script: |
              echo "Installing Terraform"
              curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo tee /etc/apt/trusted.gpg.d/hashicorp.asc
              sudo apt update && sudo apt install -y terraform
              terraform -v
            displayName: 'Install Terraform'

          # Initialize Terraform (without remote backend)
          - script: |
              terraform init
            displayName: 'Terraform Init'

          # Run Terraform Plan
          - script: |
              terraform plan \
                -var "subscription_id=$(SUBSCRIPTION_ID)" \
                -var "client_id=$(CLIENT_ID)" \
                -var "client_secret=$(CLIENT_SECRET)" \
                -var "tenant_id=$(TENANT_ID)"
            displayName: 'Terraform Plan'

          # Apply Terraform changes
          - script: |
              terraform apply -auto-approve \
                -var "subscription_id=$(SUBSCRIPTION_ID)" \
                -var "client_id=$(CLIENT_ID)" \
                -var "client_secret=$(CLIENT_SECRET)" \
                -var "tenant_id=$(TENANT_ID)"
            displayName: 'Terraform Apply'




























