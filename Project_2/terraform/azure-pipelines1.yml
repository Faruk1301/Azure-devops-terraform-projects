trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  azureServiceConnection: 'azure-sc'  
  terraformWorkingDirectory: 'Project_2/terraform'  

stages:
- stage: Terraform_Deploy
  displayName: 'Terraform Deployment'
  jobs:
  - job: Terraform
    displayName: 'Run Terraform'
    steps:

    - checkout: self

    - task: TerraformInstaller@1
      displayName: 'Install Terraform'
      inputs:
        terraformVersion: 'latest'

    - task: AzureCLI@2
      displayName: 'Azure Login'
      inputs:
        azureSubscription: $(azureServiceConnection)
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          az account show

    - task: Bash@3
      displayName: 'Terraform Init'
      inputs:
        targetType: 'inline'
        script: |
          terraform init
        workingDirectory: $(terraformWorkingDirectory)

    - task: Bash@3
      displayName: 'Terraform Plan'
      inputs:
        targetType: 'inline'
        script: |
          terraform plan -out=tfplan
        workingDirectory: $(terraformWorkingDirectory)
        env:
          AZ_SUBSCRIPTION_ID: $(SUBSCRIPTION_ID)
          AZ_CLIENT_ID: $(CLIENT_ID)
          AZ_CLIENT_SECRET: $(CLIENT_SECRET)
          AZ_TENANT_ID: $(TENANT_ID)

    - task: Bash@3
      displayName: 'Terraform Apply'
      inputs:
        targetType: 'inline'
        script: |
          terraform apply -auto-approve tfplan
        workingDirectory: $(terraformWorkingDirectory)
        env:
          AZ_SUBSCRIPTION_ID: $(SUBSCRIPTION_ID)
          AZ_CLIENT_ID: $(CLIENT_ID)
          AZ_CLIENT_SECRET: $(CLIENT_SECRET)
          AZ_TENANT_ID: $(TENANT_ID)
























