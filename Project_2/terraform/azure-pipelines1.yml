trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: azure_credential  

stages:
  - stage: Terraform_Deploy
    displayName: 'Terraform Apply'
    jobs:
      - job: Terraform
        displayName: 'Run Terraform'
        timeoutInMinutes: 10
        steps:
          - checkout: self

          # Verify Terraform files exist in the correct directory
          - script: |
              echo "Listing files in terraform directory..."
              ls -la $(Build.SourcesDirectory)/Project_2/terraform/
            displayName: 'Verify Terraform Files'

          # Install Terraform
          - task: TerraformInstaller@0
            inputs:
              terraformVersion: 'latest'
            displayName: 'Install Terraform'

          # Initialize Terraform in the correct directory
          - script: |
              terraform init
            displayName: 'Terraform Init'
            workingDirectory: $(Build.SourcesDirectory)/Project_2/terraform/

          # Run Terraform Plan
          - script: |
              terraform plan -out=tfplan \
                -var "subscription_id=$(SUBSCRIPTION_ID)" \
                -var "client_id=$(CLIENT_ID)" \
                -var "client_secret=$(CLIENT_SECRET)" \
                -var "tenant_id=$(TENANT_ID)"
            displayName: 'Terraform Plan'
            workingDirectory: $(Build.SourcesDirectory)/Project_2/terraform/

          # Apply Terraform changes
          - script: |
              terraform apply -auto-approve tfplan
            displayName: 'Terraform Apply'
            workingDirectory: $(Build.SourcesDirectory)/Project_2/terraform/

























