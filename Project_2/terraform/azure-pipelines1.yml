trigger:
  branches:
    include:
      - main  # Adjust if needed

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: azure_credential  # Clean variable names without ARM_
  - name: TF_VERSION
    value: '1.6.6'

jobs:
  - job: TerraformPlan
    displayName: 'Terraform Plan'
    steps:
      - task: TerraformInstaller@1
        inputs:
          terraformVersion: '$(TF_VERSION)'
        displayName: 'Install Terraform'
        workingDirectory: '$(System.DefaultWorkingDirectory)/Project_2/terraform'  # Set working directory at step level

      - task: AzureCLI@2
        inputs:
          azureSubscription: 'azure-sc'
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          inlineScript: |
            echo "Setting environment variables..."
            export ARM_CLIENT_ID=$(CLIENT_ID)
            export ARM_CLIENT_SECRET=$(CLIENT_SECRET)
            export ARM_SUBSCRIPTION_ID=$(SUBSCRIPTION_ID)
            export ARM_TENANT_ID=$(TENANT_ID)

            echo "Initializing Terraform..."
            terraform init

            echo "Running Terraform Plan..."
            terraform plan -out=tfplan
        displayName: 'Terraform Init & Plan'
        workingDirectory: '$(System.DefaultWorkingDirectory)/Project_2/terraform'  # Set working directory at step level

  - job: TerraformApply
    displayName: 'Terraform Apply'
    dependsOn: TerraformPlan
    condition: succeeded()
    steps:
      - task: TerraformInstaller@1
        inputs:
          terraformVersion: '$(TF_VERSION)'
        displayName: 'Install Terraform'
        workingDirectory: '$(System.DefaultWorkingDirectory)/Project_2/terraform'  # Set working directory at step level

      - task: AzureCLI@2
        inputs:
          azureSubscription: 'azure-sc'
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          inlineScript: |
            export ARM_CLIENT_ID=$(CLIENT_ID)
            export ARM_CLIENT_SECRET=$(CLIENT_SECRET)
            export ARM_SUBSCRIPTION_ID=$(SUBSCRIPTION_ID)
            export ARM_TENANT_ID=$(TENANT_ID)

            echo "Initializing Terraform..."
            terraform init

            echo "Applying Terraform Plan..."
            terraform apply -auto-approve
        displayName: 'Terraform Apply'
        workingDirectory: '$(System.DefaultWorkingDirectory)/Project_2/terraform'  # Set working directory at step level






         
























