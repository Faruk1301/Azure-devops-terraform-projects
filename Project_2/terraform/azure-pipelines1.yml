
trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: azure_credential  

stages:
  - stage: Terraform_Deploy
    displayName: 'Terraform Apply'
    jobs:
      - job: Terraform
        displayName: 'Run Terraform'
        timeoutInMinutes: 10
        steps:
          - checkout: self

          # Install Terraform
          - task: TerraformInstaller@0
            inputs:
              terraformVersion: 'latest'
            displayName: 'Install Terraform'

          # Azure Login using Service Connection
          - task: AzureCLI@2
            inputs:
              azureSubscription: 'azure-sc'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                az account show
            displayName: 'Azure Login'

          # Set environment variables for Terraform
          - script: |
              echo "Exporting environment variables..."
              echo "ARM_SUBSCRIPTION_ID=$(SUBSCRIPTION_ID)" >> $BASH_ENV
              echo "ARM_CLIENT_ID=$(CLIENT_ID)" >> $BASH_ENV
              echo "ARM_CLIENT_SECRET=$(CLIENT_SECRET)" >> $BASH_ENV
              echo "ARM_TENANT_ID=$(TENANT_ID)" >> $BASH_ENV
            displayName: 'Set Terraform Env Vars'

          # Terraform Init and Import using Bash@3
          - task: Bash@3
            name: TerraformImport
            inputs:
              targetType: 'inline'
              script: |
                terraform init
                terraform import \
                  -var="CLIENT_ID=$(CLIENT_ID)" \
                  -var="CLIENT_SECRET=$(CLIENT_SECRET)" \
                  -var="SUBSCRIPTION_ID=$(SUBSCRIPTION_ID)" \
                  -var="TENANT_ID=$(TENANT_ID)" \
                  azurerm_resource_group.rg1 /subscriptions/$(SUBSCRIPTION_ID)/resourceGroups/RG1
            displayName: 'Terraform Import RG1'
            workingDirectory: $(Build.SourcesDirectory)/Project_2/terraform/

          # Terraform Validate
          - script: terraform validate
            displayName: 'Terraform Validate'
            workingDirectory: $(Build.SourcesDirectory)/Project_2/terraform/

          # Terraform Plan
          - script: |
              terraform plan -out=tfplan \
                -var "SUBSCRIPTION_ID=$(SUBSCRIPTION_ID)" \
                -var "CLIENT_ID=$(CLIENT_ID)" \
                -var "CLIENT_SECRET=$(CLIENT_SECRET)" \
                -var "TENANT_ID=$(TENANT_ID)"
            displayName: 'Terraform Plan'
            workingDirectory: $(Build.SourcesDirectory)/Project_2/terraform/

          # Terraform Apply
          - script: terraform apply -auto-approve tfplan
            displayName: 'Terraform Apply'
            workingDirectory: $(Build.SourcesDirectory)/Project_2/terraform/



























