trigger:
  branches:
    include:
      - main  # Adjust the branch name as needed

pool:
  vmImage: 'ubuntu-latest'

variables:
  - group: azure_credential  # Uses variable group where CLIENT_SECRET, TENANT_ID, and SUBSCRIPTION_ID are stored

stages:
  - stage: Terraform_Deploy
    displayName: 'Terraform Plan & Apply'
    jobs:
      - job: Terraform
        displayName: 'Run Terraform'
        timeoutInMinutes: 10  # Limit execution time to 10 minutes
        steps:
          - checkout: self

          - task: TerraformInstaller@0
            displayName: 'Install Terraform'
            inputs:
              terraformVersion: '1.6.0'  # Use the required Terraform version

          - task: TerraformCLI@0
            displayName: 'Terraform Init'
            inputs:
              command: 'init'
              workingDirectory: '$(Build.SourcesDirectory)'
              backendType: 'azurerm'
              backendServiceArm: 'azure-sc'  # Your service connection name

          - task: TerraformCLI@0
            displayName: 'Terraform Plan'
            inputs:
              command: 'plan'
              workingDirectory: '$(Build.SourcesDirectory)'
              environmentServiceNameAzureRM: 'azure-sc'
              commandOptions: > 
                -var "CLIENT_SECRET=$(CLIENT_SECRET)"
                -var "TENANT_ID=$(TENANT_ID)"
                -var "SUBSCRIPTION_ID=$(SUBSCRIPTION_ID)"

          - task: TerraformCLI@0
            displayName: 'Terraform Apply'
            inputs:
              command: 'apply'
              workingDirectory: '$(Build.SourcesDirectory)'
              environmentServiceNameAzureRM: 'azure-sc'
              commandOptions: > 
                -auto-approve
                -var "CLIENT_SECRET=$(CLIENT_SECRET)"
                -var "TENANT_ID=$(TENANT_ID)"
                -var "SUBSCRIPTION_ID=$(SUBSCRIPTION_ID)"


























