trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
- group: azure_credential  # Contains CLIENT_ID, CLIENT_SECRET, SUBSCRIPTION_ID, TENANT_ID
- name: TF_VERSION
  value: '1.6.6'
- name: RESOURCE_GROUP_NAME
  value: 'my-vnet-rg'
- name: VNET_NAME
  value: 'my-vnet'
- name: LOCATION
  value: 'eastus'

stages:
- stage: TerraformDeploy
  displayName: 'Terraform VNet Deployment'
  jobs:
  - job: Deploy
    displayName: 'Deploy Azure VNet'
    steps:
    - task: TerraformInstaller@1
      inputs:
        terraformVersion: '$(TF_VERSION)'
      displayName: 'Install Terraform'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'azure-sc'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          # Set Terraform Azure provider credentials
          export ARM_CLIENT_ID=$(CLIENT_ID)
          export ARM_CLIENT_SECRET=$(CLIENT_SECRET)
          export ARM_SUBSCRIPTION_ID=$(SUBSCRIPTION_ID)
          export ARM_TENANT_ID=$(TENANT_ID)

          # Initialize Terraform
          echo "Initializing Terraform..."
          terraform init

          # Plan and apply in one step (for simplicity)
          echo "Creating Azure VNet..."
          terraform apply -auto-approve \
            -var="resource_group_name=$(RESOURCE_GROUP_NAME)" \
            -var="vnet_name=$(VNET_NAME)" \
            -var="location=$(LOCATION)"
      displayName: 'Create Azure VNet'







         
























