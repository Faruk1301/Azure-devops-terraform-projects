trigger:
  branches:
    include:
      - main

variables:
- group: azure_credential
- name: TF_VERSION
  value: '1.6.6'
- name: RESOURCE_GROUP_NAME
  value: 'my-vnet-rg'
- name: VNET_NAME
  value: 'my-vnet'
- name: LOCATION
  value: 'eastus'
- name: ADDRESS_SPACE
  value: '["10.0.0.0/16"]'

pool:
  vmImage: 'ubuntu-latest'
  timeoutInMinutes: 30 # Prevents timeout failures

stages:
- stage: Deploy
  jobs:
  - job: Terraform
    steps:
    - task: TerraformInstaller@1
      inputs:
        terraformVersion: '$(TF_VERSION)'
      displayName: 'Install Terraform'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'azure-sc'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        failOnStderr: true
        inlineScript: |
          # Enable detailed logging
          set -e
          echo "##[group]Configure Azure Credentials"
          export ARM_CLIENT_ID=$(CLIENT_ID)
          export ARM_CLIENT_SECRET=$(CLIENT_SECRET)
          export ARM_SUBSCRIPTION_ID=$(SUBSCRIPTION_ID)
          export ARM_TENANT_ID=$(TENANT_ID)
          echo "##[endgroup]"
          
          echo "##[group]Terraform Init"
          terraform init -no-color
          echo "##[endgroup]"
          
          echo "##[group]Terraform Apply"
          terraform apply -auto-approve -no-color \
            -var="resource_group_name=$(RESOURCE_GROUP_NAME)" \
            -var="vnet_name=$(VNET_NAME)" \
            -var="location=$(LOCATION)" \
            -var="address_space=$(ADDRESS_SPACE)"
          echo "##[endgroup]"
      displayName: 'Deploy VNet'






         
























