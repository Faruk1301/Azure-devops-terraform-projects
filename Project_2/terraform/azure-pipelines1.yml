trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
- group: azure_credential
- name: TF_VERSION
  value: '1.6.6'

# ------------------------------
# Stage 1: Terraform Plan
# ------------------------------
- stage: TerraformPlan
  displayName: 'Terraform Plan'
  jobs:
  - job: Plan
    displayName: 'Run terraform plan'
    steps:

    - task: TerraformInstaller@1
      inputs:
        terraformVersion: '$(TF_VERSION)'
      displayName: 'Install Terraform'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'azure-sc'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        workingDirectory: '$(System.DefaultWorkingDirectory)/Project_2/terraform'  # ✅ Add this line
        inlineScript: |
          echo "Setting environment variables..."
          export ARM_CLIENT_ID=$(CLIENT_ID)
          export ARM_CLIENT_SECRET=$(CLIENT_SECRET)
          export ARM_SUBSCRIPTION_ID=$(SUBSCRIPTION_ID)
          export ARM_TENANT_ID=$(TENANT_ID)

          echo "Initializing Terraform..."
          terraform init

          echo "Running Terraform Plan..."
          terraform plan -out=tfplan
      displayName: 'Terraform Init & Plan'

# ------------------------------
# Stage 2: Terraform Apply
# ------------------------------
- stage: TerraformApply
  displayName: 'Terraform Apply'
  dependsOn: TerraformPlan
  condition: succeeded()
  jobs:
  - job: Apply
    displayName: 'Apply Terraform Changes'
    steps:

    - task: TerraformInstaller@1
      inputs:
        terraformVersion: '$(TF_VERSION)'
      displayName: 'Install Terraform'

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'azure-sc'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        workingDirectory: '$(System.DefaultWorkingDirectory)/Project_2/terraform'  # ✅ Add this line
        inlineScript: |
          export ARM_CLIENT_ID=$(CLIENT_ID)
          export ARM_CLIENT_SECRET=$(CLIENT_SECRET)
          export ARM_SUBSCRIPTION_ID=$(SUBSCRIPTION_ID)
          export ARM_TENANT_ID=$(TENANT_ID)

          echo "Initializing Terraform..."
          terraform init

          echo "Applying Terraform Plan..."
          terraform apply -auto-approve
      displayName: 'Terraform Apply'




         
























